<html>
    <head>
        <title>Map</title>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/css/reset.css" />
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/js/leaflet/leaflet.css" />
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/js/leaflet/leaflet.draw.css" />
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/js/leaflet/leaflet-search.css" />
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/js/leaflet/leaflet.label.css" />
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/css/redmond/jquery-ui-1.10.2.custom.css" />
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/css/ui.panel.css" />
        <!--[if lte IE 8]><link rel="stylesheet" href="<?php echo base_url() ?>assets/js/leaflet/leaflet.ie.css" /><![endif]-->
        <!--[if lte IE 8]><link rel="stylesheet" href="<?php echo base_url() ?>assets/js/leaflet/leaflet.draw.ie.css" /><![endif]-->
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/css/jquery.jgrowl.css" />
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/css/blue-glass/sidebar.css" />
        <!--<link rel="stylesheet" href="<?php echo base_url() ?>assets/css/jquery.mobile-1.3.1.css" />-->

        <style>
            body {
                font-family: "Trebuchet MS", "Helvetica", "Arial",  "Verdana", "sans-serif";
                font-size: 62.5%;
            }
            label, input { display:block; }
            input.text { margin-bottom:12px; width:95%; padding: .4em; }
            fieldset { padding:0; border:0; margin-top:25px; }
            h1 { font-size: 1.2em; margin: .6em 0; }
            .ui-dialog .ui-state-error { padding: .3em; }
            .ui-corner-all, .ui-corner-top, .ui-corner-right, .ui-corner-tr {
                border-top-right-radius: 0px;
            }
            .ui-corner-all, .ui-corner-bottom, .ui-corner-left, .ui-corner-bl {
                border-bottom-left-radius: 0px;
            }
            .ui-corner-all, .ui-corner-bottom, .ui-corner-right, .ui-corner-br {
                border-bottom-right-radius: 0px;
            }
            .ui-corner-all, .ui-corner-top, .ui-corner-left, .ui-corner-tl {
                border-top-left-radius: 0px;
            }
            .validateTips { border: 1px solid transparent; padding: 0.3em; }
            div.jGrowl div.warning {
                background: 		#5c9ccc;
                color: 					white;
                border : black;
            }
            .leaflet-popup-content-wrapper {
                border: 1px solid #a6c9e2;
                background: #dfeffc url('<?php echo base_url() ?>assets/css/redmond/images/ui-bg_glass_85_dfeffc_1x400.png') 50% 50% repeat-x;
                -webkit-border-radius: 0px;
                border-radius: 0px;
            }

            .leaflet-popup-content-wrapper .leaflet-popup-content {
                background: #dfeffc url('<?php echo base_url() ?>assets/css/redmond/images/ui-bg_glass_85_dfeffc_1x400.png') 50% 50% repeat-x;
                color: #1d5987;
            }


        </style>
        <link rel="stylesheet" href="<?php echo base_url() ?>assets/css/nbilz.css" />
        <script src="<?php echo base_url() ?>assets/js/jquery-1.7.2.min.js"></script>
        <script src="<?php echo base_url() ?>assets/js/jquery-ui-1.10.2.js"></script>
        <script src="<?php echo base_url() ?>assets/js/ui.panel.min.js"></script>
        <script type="text/javascript" src="<?php echo $this->config->item('socket_ip') ?>/socket.io/socket.io.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/leaflet/leaflet.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/leaflet/leaflet.draw.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/leaflet/leaflet-search.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/leaflet/leaflet.label.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/leaflet/Marker.Rotate.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/jquery.jgrowl.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/jquery.sidebar.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/geo.js"></script>
        <script type="text/javascript" src="<?php echo base_url() ?>assets/js/latlon.js"></script>

        <script type="text/javascript">
			var month=new Array(12);
			month[0]="Januari";
			month[1]="Februari";
			month[2]="Maret";
			month[3]="April";
			month[4]="Mei";
			month[5]="Juni";
			month[6]="Juli";
			month[7]="Agustus";
			month[8]="September";
			month[9]="Oktober";
			month[10]="November";
			month[11]="Desember";

            var measuring_line = null;
            var stat_ukur_jarak = false;
            var start_draw = false;
            var stop_draw = false;
            var start_lat = null;
            var start_lon = null;
            var distancePopup = false;
            var stat_draw_area = false;
            var type_draw_area = 'polygon';
            var draw_circle,draw_point,draw_polygon;
            var configMap = {
                latCenter : -2.108899,
                lonCenter : 117.509766,
                zoom :6,
                mapUrl : '<?php echo $this->config->item('map_url') ?>',
                mapStyleId : 22677
            };
            var conf = {
                url : '<?php echo base_url() ?>'
            };
            var map,marker = new Array(),groupMarkerPoi,markerPoi = new Array(),dataMarkerPoi = new Array(),temp_path = new Array(),polygon_area = new Array(),data_area = new Array(),circle_area = new Array(),data_area_circle = new Array();
            var count_area = 0,count_area_circle=0,count_marker=0;
            var bounds = new L.LatLngBounds(new L.LatLng(-18.729502,147.260742), new L.LatLng(18.062312,80.419922));
            var socket = io.connect('<?php echo $this->config->item('socket_ip') ?>');
            var markersLayer = new Array();
            var markerKRI = new Array(),markerKRIdata = new Array();
            var stat_view = {kri:true,track:false,marine:false,station:false,intelegent:false};
            var dataMarine,dataStation,dataIntelegent = null;
            var markerAdditional = new Array();
            var markerTrack = null;
			var markersSearch = new L.LayerGroup();
            var ShipMarker = L.Icon.extend({
                options: {
                    iconSize:     [20, 20],
                    iconAnchor: [8, 20],
                }
            });
            var IconKI = new ShipMarker({iconUrl:conf.url+'assets/img/icon-ship/blue2/1.-KI.png'}),//MEMASUKAN GAMBAR IKON 
            IconUnk = new ShipMarker({iconUrl: conf.url+'assets/img/icon-ship/non-kri/1.-Non-NKRI-(Red).png'}),
            IconMarine = new ShipMarker({iconUrl: conf.url+'assets/img/icon-ship/non-kri/1.-Non-NKRI-(Blue).png'}),
            IconIntelegent = new ShipMarker({iconUrl: conf.url+'assets/img/icon-ship/non-kri/1.-Non-NKRI-(Green).png'}),
            IconStation = new ShipMarker({iconUrl: conf.url+'assets/img/icon-ship/non-kri/1.-Non-NKRI-(Yellow).png'});
            var tempTrack = new Array();
			var array_search = new Array();
			var array_additional = new Array();
			var circleAnimation = null;
            $(document).ready(function(){
                init();
                getPushdata();
                next_move();
                getMarines();
                getIntelegentInfo();
                getStation();
                initChatEngine();
                var attrib = new L.Control.Attribution;
                map.addControl(attrib);	
                attrib.setPrefix('Koordinat : ');
                function onMouseMove(e) {
                    attrib.setPrefix('Koordinat : '+viewableCoordinate(e.latlng.lat,'lat') + ", " + viewableCoordinate(e.latlng.lng,'lon'));
                    if(start_draw==true && !stop_draw){
                        measuring_line.setLatLngs([start_lat,new L.LatLng(e.latlng.lat,e.latlng.lng)]);
                        var centerPos = new L.LatLng((start_lat.lat + e.latlng.lat)/2, 
                        (start_lat.lng + e.latlng.lng)/2);
                        var distance = start_lat.distanceTo(e.latlng);
                
                        popup_distance(distance, new L.LatLng(e.latlng.lat,e.latlng.lng));
                        map.addLayer(distancePopup)
                        .fire('popupopen', { popup: distancePopup });
                    }
                }
                map.on('mousemove', onMouseMove);
                map.on('contextmenu',function(e){
                    if(stat_ukur_jarak){
                        if(!start_draw){
                            start_draw = true;
                            measuring_line = new L.Polyline([new L.LatLng(e.latlng.lat,e.latlng.lng),new L.LatLng(e.latlng.lat,e.latlng.lng)], {color: 'red'}).addTo(map);
                            start_lat = new L.LatLng(e.latlng.lat,e.latlng.lng);
                        }else if(start_draw==true && !stop_draw){
                            stop_draw = true;
                            measuring_line.setLatLngs([start_lat,new L.LatLng(e.latlng.lat,e.latlng.lng)]);
                            var centerPos = new L.LatLng((start_lat.lat + e.latlng.lat)/2, 
                            (start_lat.lng + e.latlng.lng)/2);
                            var distance = start_lat.distanceTo(e.latlng);
					
                            popup_distance(distance, centerPos,start_lat,new L.LatLng(e.latlng.lat,e.latlng.lng));
                            map.addLayer(distancePopup)
                            .fire('popupopen', { popup: distancePopup }).on('popupclose',function(e){hapus_jarak()});
                        }
                    }
                });
				
                $("ul#demo_menu2").sidebar({
                    position:"left"
                });
            });
	
            function init(){
                var minimal   = L.tileLayer(configMap.mapUrl, {styleId: configMap.mapStyleId,continuousWorld: 'false'});
                var southWest = new L.LatLng(85, -180);
                var northEast = new L.LatLng(-85, 180);
                var bounds = new L.LatLngBounds(southWest, northEast);
                map = new L.map('map', {
                    center: [configMap.latCenter, configMap.lonCenter],
                    zoom: configMap.zoom,
                    maxBounds : bounds,
                    layers: [minimal],
                    maxZoom : 15,
                    minZoom : 3
                });
                var baseLayers = {
                    "Default": minimal,
                };	
				map.addLayer(markersSearch);
                initDrawControl();
                init_dialog();
				$("#map .leaflet-control-container").append('<div class="leaflet-control-search leaflet-control" style="margin-top:75px;"><input class="search-input" type="text" size="17"  placeholder="Cari Nama Kapal.." style="display: none; max-width: 100%;"><div class="search-tooltip" style="display: none;"></div><a class="search-cancel" href="#" title="Cancel" style="display: none;"><span>⊗</span></a><a class="search-button" href="#" title="Cari Nama Kapal.."></a><div class="search-alert" style="display: none;"></div></div>');
            }
		
            function initDrawControl(){
                var drawnItems = new L.FeatureGroup();
                map.addLayer(drawnItems);
                var drawControl = new L.Control.Draw({
                    draw: {
                        position: 'topleft',
                        polygon: {
                            title: 'Membuat Area Polygon',
                            allowIntersection: true,
                            drawError: {
                                color: '#b00b00',
                                timeout: 1000
                            },
                            shapeOptions: {
                                color: '#bada55'
                            }
                        },
                        circle: {
                            title: 'Membuat Area Lingkaran',
                            shapeOptions: {
                                color: '#662d91'
                            }
                        },
                        polyline : false,
                        rectangle : false
                    },
                    edit:false
                });
                // map.addControl(drawControl);
                draw_circle = new L.Draw.Circle(map, drawControl.options.circle);
                draw_polygon = new L.Draw.Polygon(map, drawControl.options.polygon);
                draw_point = new L.Draw.Marker(map, drawControl.options.marker);
				
                // console.log(drawControl);
                map.on('draw:created', function (e) {
                    var type = e.layerType,layer = e.layer;
                    switch(type){
                        case 'polygon' : setPolygonArea(layer);
                            break;
                        case 'circle' : setCircleArea(layer);
                            break;
                        case 'marker' : setMarkerArea(layer);
                            break;
					
                    }
                    drawnItems.addLayer(layer);
                });
				// map.addControl( new L.Control.Search({layer: markersSearch, initial: false,text:'Cari Nama Kapal..',autoCollapse:true}) );
				
            }
		
            function init_dialog(){
                $("#radioset_area_circle,#radioset_area_polygon,#radioset_marker").buttonset();
                $("#radiosetview").buttonset();
                $( "#dialog-post-area,#dialog-post-marker,#dialog-post-circle,#dialog-postarea-manual,#dialog-lapsithar" ).dialog({
                    autoOpen: false,
                    height: 400,
                    width: 500,
                    modal: true
                });
                $("#dialog-chat").dialog({
                    autoOpen: false,
                    height: 600,
                    width: 500,
                    modal: true
                });
			
            }
			
            function viewMarker(id){
                var tempMarine = [];
                var tempStation = [];
                var tempIntelegent = [];
                switch(id){
                    case 'radio-kri':
                        if($("#"+id).attr('checked')=="checked"){
                            stat_view.kri = true;
                            
                        }else{
                            stat_view.kri = false;
                            
                        }
                        break;
                    case 'radio-track':
                        if($("#"+id).attr('checked')=="checked"){
                            
                            stat_view.track = true;
                        }else{
                            
                            stat_view.track = false;
                            if(markerTrack!=null){
                                removeTrack();
                            }
                            markerTrack=null;
                        }
                        break;
                    case 'radio-base':
                        if($("#"+id).attr('checked')=="checked"){
                            if(markerAdditional['station']!=undefined){
                                removeAdditional(markerAdditional['station']);
                            }
                            if(dataStation!=null){
                                $.each(dataStation,function(i,item){
                                    item.station_lat = parseFloat(item.station_lat);
                                    item.station_lon = parseFloat(item.station_lon);
                                    tempMarine.push(L.marker([item.station_lat,item.station_lon],{icon:IconStation}).bindLabel('<p align="center">'+item.station_name+'<br />'+viewableCoordinate(item.station_lat,'lat')+' , '+viewableCoordinate(item.station_lon,'lon')+'</p>')
                                    .on('contextmenu',function(e){
                                        if(!start_draw){
                                            start_draw = true;
                                            measuring_line = new L.Polyline([new L.LatLng(item.station_lat,item.station_lon),new L.LatLng(item.station_lat,item.station_lon)], {color: 'red'}).addTo(map);
                                            start_lat = new L.LatLng(item.station_lat,item.station_lon);
                                        }else if(start_draw==true && !stop_draw){
                                            stop_draw = true;
                                            measuring_line.setLatLngs([start_lat,new L.LatLng(item.station_lat,item.station_lon)]);
                                            var centerPos = new L.LatLng((start_lat.lat + item.station_lon)/2, 
                                            (start_lat.lng + item.station_lon)/2);
                                            var distance = start_lat.distanceTo(new L.LatLng(item.station_lat,item.station_lon));
                                            popup_distance(distance, centerPos,start_lat,new L.LatLng(item.station_lat,item.station_lon));
                                            map.addLayer(distancePopup)
                                            .fire('popupopen', { popup: distancePopup }).on('popupclose',function(e){hapus_jarak()});
                                        }
                                    }).on('click',function(e){
                                        var text = '<div style="margin: 10px; width: 250px;">'+
                                            '<div id="panel_station">'+
                                            '<p style="font-weight:bold;" align="center">'+item.station_name+'</p>'+
                                            '<p>Posisi :  '+viewableCoordinate(item.station_lat,'lat')+' , '+viewableCoordinate(item.station_lon,'lon')+'</p>'+
                                            '<p>Tipe Pangkalan :  '+item.stype_name+'</p>'+
                                            '<p>Nama Korps :  '+item.corps_name+'</p>'+
                                            '<p>Deskripsis Korps :  '+item.corps_description+' </p>';
                                        '</div><br /><br />'+
                                            '</div>';
                                        $('#title_panel').text('Informasi Pangkalan');
                                        $('#panelRight_1').show();
                                        $("#kridata").empty();
                                        $("#kridata").html(text);
										
                                    })
                                );
                                });
                                markerAdditional['station'] =  L.layerGroup(tempMarine);
                                map.addLayer(markerAdditional['station']);
                            }
                            stat_view.stattion = true;
                        }else{
                            stat_view.stattion = false;
                            if(markerAdditional['station']!=undefined){
                                removeAdditional(markerAdditional['station']);
                            }
                        }
                        break;
                    case 'radio-marinir':
                        if($("#"+id).attr('checked')=="checked"){
                            stat_view.marine = true;
                            if(markerAdditional['marine']!=undefined){
                                removeAdditional(markerAdditional['marine']);
                            }
                            if(dataMarine!=null){
                                $.each(dataMarine,function(i,item){
                                    item.mar_lat = parseFloat(item.mar_lat);
                                    item.mar_lon = parseFloat(item.mar_lon);
                                    tempMarine.push(L.marker([item.mar_lat,item.mar_lon],{icon:IconMarine}).bindLabel('<p align="center">'+item.corps_name+'<br />'+viewableCoordinate(item.mar_lat,'lat')+' , '+viewableCoordinate(item.mar_lon,'lon')+'</p>')
                                    .on('contextmenu',function(e){
                                        if(stat_ukur_jarak){
                                            if(!start_draw){
                                                start_draw = true;
                                                measuring_line = new L.Polyline([new L.LatLng(item.mar_lat,item.mar_lon),new L.LatLng(item.mar_lat,item.mar_lon)], {color: 'red'}).addTo(map);
                                                start_lat = new L.LatLng(item.mar_lat,item.mar_lon);
                                            }else if(start_draw==true && !stop_draw){
                                                stop_draw = true;
                                                measuring_line.setLatLngs([start_lat,new L.LatLng(item.mar_lat,item.mar_lon)]);
                                                var centerPos = new L.LatLng((start_lat.lat + item.mar_lon)/2, 
                                                (start_lat.lng + item.mar_lon)/2);
                                                var distance = start_lat.distanceTo(new L.LatLng(item.mar_lat,item.mar_lon));
                                                popup_distance(distance, centerPos,start_lat,new L.LatLng(item.mar_lat,item.mar_lon));
                                                map.addLayer(distancePopup)
                                                .fire('popupopen', { popup: distancePopup }).on('popupclose',function(e){hapus_jarak()});
                                            }
                                        }
                                    }).on('click',function(e){
                                        var text = '<div style="margin: 10px; width: 250px;">'+
                                            '<div id="panel_marines">'+
                                            '<p style="font-weight:bold;" align="center">'+item.mar_name+'</p>'+
                                            '<p>Posisi :  '+viewableCoordinate(item.mar_lat,'lat')+' , '+viewableCoordinate(item.mar_lon,'lon')+'</p>'+
                                            '<p>Deskripsi :  '+item.mar_description+'</p>'+
                                            '<p>Jml Personel :  '+item.mar_personel_count+' orang</p>'+
                                            '<p>Nama Korps :  '+item.corps_name+'</p>'+
                                            '<p>Deskripsis Korps :  '+item.corps_description+' </p>';
                                        '</div><br /><br />'+
                                            '</div>';
                                        $('#title_panel').text('Informasi Marinir');
                                        $('#panelRight_1').show();
                                        $("#kridata").empty();
                                        $("#kridata").html(text);
										
                                    })
                                );
                                });
                                markerAdditional['marine'] =  L.layerGroup(tempMarine);
                                map.addLayer(markerAdditional['marine']);
                            }
                        }else{
                            stat_view.marine = false;
                            if(markerAdditional['marine']!=undefined){
                                removeAdditional(markerAdditional['marine']);
                            }
                        }
                        break;
                    case 'radio-intelejen':
                        if($("#"+id).attr('checked')=="checked"){
                            stat_view.intelegent = true;
                            if(markerPoi.length>0){
                                for(var i in markerPoi){
                                    markerPoi[i].setOpacity(1);
                                }
                            }
                            if(circle_area.length>0){
                                for(var i in circle_area){
                                    circle_area[i].setStyle({'fillOpacity':0.5});
                                }
                            }	
                            if(polygon_area.length>0){
                                for(var i in polygon_area){
                                    polygon_area[i].setStyle({'fillOpacity':0.5});
                                }
                            }
                        }else{
                            stat_view.intelegent = false;
                            if(markerPoi.length>0){
                                for(var i in markerPoi){
                                    markerPoi[i].setOpacity(0);
                                }
                            }
                            if(circle_area.length>0){
                                for(var i in circle_area){
                                    circle_area[i].setStyle({'fillOpacity':0});
                                }
                            }
                            if(polygon_area.length>0){
                                for(var i in polygon_area){
                                    polygon_area[i].setStyle({'fillOpacity':0});
                                }
                            }
                        }
                        break;
                    }
					
                    if(stat_view.kri==true && stat_view.track==true){
                        socket.emit('reqUnsubscribe',{mode:'kri'});
                        socket.emit('reqUnsubscribe',{mode:'track'});
                        socket.emit('reqSubscribe',{mode:'all'});
                        console.log('all');
                    }else if(stat_view.kri==true && stat_view.track==false){
                        socket.emit('reqSubscribe',{mode:'kri'});
                        socket.emit('reqUnsubscribe',{mode:'all'});
                        socket.emit('reqUnsubscribe',{mode:'track'});
                        console.log('kri');
                    }else if(stat_view.kri==false && stat_view.track==true){
                        socket.emit('reqSubscribe',{mode:'track'});
                        socket.emit('reqUnsubscribe',{mode:'kri'});
                        socket.emit('reqUnsubscribe',{mode:'all'});
                        console.log('track');
                    }
				
                    for(var i in markerKRI){
                        if(stat_view.kri==true && (markerKRI[i]['kri']!=undefined || markerKRI[i]['kri']!=null )){
                            markerKRI[i]['kri'].setOpacity(1);
                            markerKRIdata[i]['kri'].view=true;
                        }else if(stat_view.kri==false && (markerKRI[i]['kri']!=undefined || markerKRI[i]['kri']!=null )){
                            markerKRI[i]['kri'].setOpacity(0);
                            markerKRIdata[i]['kri'].view=false;
                        }
                    }
                }
		
                function setPolygonArea(layer){
                    // layer.on('click',function(el){
                    postArea(layer._latlngs,layer);
                    // });
                    // console.log();
                }
		
                function setCircleArea(layer){
                    // layer.on('click',function(el){
                    postCircle(layer);
                    // });
					
                }
		
                function setMarkerArea(layer){
                    var myIcon = L.icon({
                        iconUrl: conf.url+'assets/img/x-red.png',
                        iconSize: [25, 25]
                    });
                    layer.setIcon(myIcon);
                    postMarker(layer);
                }
		
                function drawMarker(item){
                    var icon = L.icon({
                        iconUrl: conf.url+'assets/img/x-green.jpg',
                        iconSize: [25, 25]
                    });
                    var text = "<p><span style='font-weight:bold;'>Nama Marker:</span><br />"+item.name+"</p>"+
                        "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+item.desc+"</p>"+
                        "<p><span style='font-weight:bold;'>Tipe</span><br />Intelegent Info</p>"+
                        "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editMarker("+count_marker+")' /></p>"+
                        "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteMarker("+count_marker+")' /></p>";
                    markerPoi[count_marker] = new L.marker([parseFloat(item.lat), parseFloat(item.lon)],{icon:icon,opacity:0}).bindPopup(text);
                    dataMarkerPoi[count_marker] = {poi_name:item.name,poi_description:item.desc,poi_lat:item.lat,poi_lon:item.lon,aoipoi_type_id:0,poi_id:item.id};	
                    count_marker++;
                    groupMarkerPoi = L.layerGroup(markerPoi);
                    map.addLayer(groupMarkerPoi);
                }
		
                function drawCircle(item){
                    var text = "<p><span style='font-weight:bold;'>Nama Area:</span><br />"+item.name+"</p>"+
                        "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+item.desc+"</p>"+
                        "<p><span style='font-weight:bold;'>Tipe</span><br />Intelegent Info</p>"+
                        "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editCircle("+count_area_circle+")' /></p>"+
                        "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteCircle("+count_area_circle+")' /></p>";
                    circle_area[count_area_circle] = new L.circle([parseFloat(item.lat), parseFloat(item.lon)], parseFloat(item.rad),{color:"red",weight:0,fillOpacity:0}).bindPopup(text);
                    map.addLayer(circle_area[count_area_circle]);
                    data_area_circle[count_area_circle] = {'aoi_name':item.name,'aoi_description':item.desc,'aoipoi_type_id':0,'aoi_id':item.id,'aoi_circle_lon':item.lon,'aoi_circle_lat':item.lat,'aoi_circle_rad':item.rad};
                    count_area_circle++;
                }
		
                function drawArea(item){
                    temp_path = [];
                    var path_bound = new Array();
                    $.each(item.points,function(j,path){
                        temp_path.push([parseFloat(path.lat),parseFloat(path.lon)]);
                        path_bound.push({lat:parseFloat(path.lat),lng:parseFloat(path.lon)});
                    });
                    var text = "<p><span style='font-weight:bold;'>Nama Area:</span><br />"+item.name+"</p>"+
                        "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+item.desc+"</p>"+
                        "<p><span style='font-weight:bold;'>Tipe</span><br />Intelegent Info</p>"+
                        "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editArea("+count_area+")' /></p>"+
                        "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteArea("+count_area+")' /></p>";
                    polygon_area[count_area] = new L.Polygon(temp_path,{color:"red",weight:0,fillOpacity:0}).bindPopup(text);
                    map.addLayer(polygon_area[count_area]);
                    data_area[count_area] = {'aoi_name':item.name,'aoi_description':item.desc,'aoipoi_type_id':0,'path':path_bound,'aoi_id':item.id};
			
                    count_area++;
                }
		
                function postArea(data_array,layer_polygon){
                    $("#form_add_area_polygon").each(function(){ this.reset(); });
                    var path_bound = new Array();
                    temp_path = [];
                    $.each(data_array,function(i,item){
                        path_bound.push({lat:item.lat,lng:item.lng});
                        temp_path.push([item.lat,item.lng]);
                    });
                    $( "#dialog-post-area" ).dialog({buttons: {
                            "Simpan Area": function() {
                                var type_id = $("#tipe_area_polygon option:selected").val();
                                var name_type = $("#tipe_area_polygon option:selected").text();
                                $.ajax({
                                    url:conf.url+'map_service/aoi/saveAOI',
                                    dataType : 'html',
                                    type : 'POST',
                                    data : {aoipoi_type_id:type_id,aoi_name:$("#name_area_polygon").val(),aoi_description:$("#description_area_polygon").val(),aoi_points:path_bound},
                                    success : function(data){
                                        var text = "<p><span style='font-weight:bold;'>Nama Area:</span><br />"+$("#name_area_polygon").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+$("#description_area_polygon").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Tipe</span><br />"+name_type+"</p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editArea("+count_area+")' /></p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteArea("+count_area+")' /></p>";
                                        layer_polygon.off('click');
                                        map.removeLayer(layer_polygon);
                                        polygon_area[count_area] = new L.Polygon(temp_path,{color:"red",weight:0,fillOpacity:0}).bindPopup(text);
                                        map.addLayer(polygon_area[count_area]);
                                        data_area[count_area] = {'aoi_name':$("#name_area_polygon").val(),'aoi_description':$("#description_area_polygon").val(),'aoipoi_type_id':type_id,'path':path_bound,'aoi_id':data};
                                        // for(var i in markerKRI){
                                        // checkContainLatlngPolygonArea(markerKRI[i],count_area);
                                        // }
                                        count_area++;
										
                                    }
                                });
                                set_drawing_area();
                                $( this ).dialog( "close" );
                            },
                            Cancel: function() {
                                map.removeLayer(layer_polygon);
                                set_drawing_area();
                                $( this ).dialog( "close" );
                            }
                        }});
                    $( "#dialog-post-area" ).dialog( "open" );
                }
		
                function postMarker(layer){
                    $("#form_add_marker").each(function(){ this.reset(); });
                    $( "#dialog-post-marker" ).dialog({buttons: {
                            "Simpan Marker": function() {
                                var type_id = $("#tipe_marker option:selected").val();
                                var name_type = $("#tipe_marker option:selected").text();
                                $.ajax({
                                    url:conf.url+'map_service/poi/savePOI',
                                    dataType : 'html',
                                    type : 'POST',
                                    data : {aoipoi_type_id:type_id,poi_name:$("#name_marker").val(),poi_description:$("#description_marker").val(),poi_lat:layer.getLatLng().lat,poi_lon:layer.getLatLng().lng},
                                    success : function(data){
                                        //map.removeLayer(marker)
                                        layer.off('click');
                                        var icon = L.icon({
                                            iconUrl: conf.url+'assets/img/x-green.jpg',
                                            iconSize: [25, 25]
                                        });
                                        var text = "<p><span style='font-weight:bold;'>Nama Marker:</span><br />"+$("#name_marker").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+$("#description_marker").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Tipe</span><br />"+name_type+"</p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editMarker("+count_marker+")' /></p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteMarker("+count_marker+")' /></p>";
                                        dataMarkerPoi[count_marker] = {poi_name:$("#name_marker").val(),poi_description:$("#description_marker").val(),poi_lat:layer.getLatLng().lat,poi_lon:layer.getLatLng().lng,aoipoi_type_id:type_id,poi_id:data};	
                                        map.removeLayer(layer);
                                        markerPoi[count_marker] = new L.marker([parseFloat(dataMarkerPoi[count_marker].poi_lat), parseFloat(dataMarkerPoi[count_marker].poi_lon)],{icon:icon,opacity:0}).bindPopup(text);
                                        map.addLayer(markerPoi[count_marker]);
                                        count_marker++;
										
                                    }
                                });
                                set_drawing_area();
                                $( this ).dialog( "close" );
                            },
                            Cancel: function() {	
                                map.removeLayer(layer);
                                set_drawing_area();
                                $( this ).dialog( "close" );
                            }
                        }});
                    $( "#dialog-post-marker" ).dialog( "open" );
                }
		
                function postCircle(layer){
                    $("#form_add_circle").each(function(){ this.reset(); });
                    $( "#dialog-post-circle" ).dialog({buttons: {
                            "Simpan Area": function() {
                                var type_id = $("#tipe_area_circle option:selected").val();
                                var name_type = $("#tipe_area_circle option:selected").text();
                                $.ajax({
                                    url:conf.url+'map_service/aoi_circle/saveCircle',
                                    dataType : 'html',
                                    type : 'POST',
                                    data : {aoipoi_type_id:type_id,aoi_name:$("#name_area_circle").val(),aoi_description:$("#description_area_circle").val(),aoi_circle_lat:layer.getLatLng().lat,aoi_circle_lon:layer.getLatLng().lng,aoi_circle_rad:layer.getRadius()},
                                    success : function(data){
                                        layer.off('click');
                                        data_area_circle[count_area_circle] = {'aoi_name':$("#name_area_circle").val(),'aoi_description':$("#description_area_circle").val(),'aoipoi_type_id':type_id,'aoi_id':data,'aoi_circle_lon':layer.getLatLng().lng,'aoi_circle_lat':layer.getLatLng().lat,'aoi_circle_rad':layer.getRadius()};
                                        map.removeLayer(layer);
                                        var text = "<p><span style='font-weight:bold;'>Nama Area:</span><br />"+$("#name_area_circle").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+$("#description_area_circle").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Tipe</span><br />"+name_type+"</p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editCircle("+count_area_circle+")' /></p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteCircle("+count_area_circle+")' /></p>";
                                        circle_area[count_area_circle] = new L.circle([parseFloat(data_area_circle[count_area_circle].aoi_circle_lat), parseFloat(data_area_circle[count_area_circle].aoi_circle_lon)], parseFloat(data_area_circle[count_area_circle].aoi_circle_rad),{color:"red",weight:0,fillOpacity:0}).bindPopup(text);
                                        map.addLayer(circle_area[count_area_circle]);
                                        // for(var i in markerKRI){
                                        // checkContainLatlngCircleArea(markerKRI[i],count_area_circle);
                                        // }
                                        count_area_circle++;
										
                                    }
                                });
                                set_drawing_area();
                                $( this ).dialog( "close" );
                            },
                            Cancel: function() {
                                set_drawing_area();
                                map.removeLayer(layer);
                                $( this ).dialog( "close" );
                            }
                        }});
                    $( "#dialog-post-circle" ).dialog( "open" );
                }
		
                function editArea(id){
                    polygon_area[id].closePopup();
                    $("#form_add_area_polygon").each(function(){ this.reset(); });
                    $("#name_area_polygon").val(data_area[id].aoi_name);
                    $("#description_area_polygon").val(data_area[id].aoi_description);
                    $("#tipe_area_polygon").val(data_area[id].aoipoi_type_id);
                    $('#dialog-post-area').dialog({buttons: {
                            "Simpan Area": function() {
                                var type_id = $("#tipe_area_polygon option:selected").val();
                                var name_type = $("#tipe_area_polygon option:selected").text();
                                $.ajax({
                                    url:conf.url+'map_service/aoi/editAOI',
                                    dataType : 'html',
                                    type : 'POST',
                                    data : {aoipoi_type_id:type_id,aoi_name:$("#name_area_polygon").val(),aoi_description:$("#description_area_polygon").val(),aoi_points:data_area[id].path,aoi_id:data_area[id].aoi_id},
                                    success : function(data){
                                        //console.log(data);
                                        data_area[id] = {'aoi_name':$("#name_area_polygon").val(),'aoi_description':$("#description_area_polygon").val(),'aoipoi_type_id':type_id,'path':data_area[id].path,'aoi_id':data_area[id].aoi_id};
                                        var text = "<p><span style='font-weight:bold;'>Nama Area:</span><br />"+$("#name_area_polygon").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+$("#description_area_polygon").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Tipe</span><br />"+name_type+"</p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editArea("+id+")' /></p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteArea("+id+")' /></p>";
                                        polygon_area[id].unbindPopup();
                                        polygon_area[id].bindPopup(text);
                                    }
                                });
                                $( this ).dialog( "close" );
                            },
                            Cancel: function() {
                                $( this ).dialog( "close" );
                            }
                        }}).dialog( "open" );
                }
		
                function editCircle(id){
                    circle_area[id].closePopup();
                    $("#form_add_circle").each(function(){ this.reset(); });
                    $("#name_area_circle").val(data_area_circle[id].aoi_name);
                    $("#description_area_circle").val(data_area_circle[id].aoi_description);
                    $("#tipe_area_circle").val(data_area_circle[id].aoipoi_type_id);
                    $("#dialog-post-circle").dialog({buttons: {
                            "Simpan Area": function() {
                                var type_id = $("#tipe_area_circle option:selected").val();
                                var name_type = $("#tipe_area_circle option:selected").text();
                                $.ajax({
                                    url:conf.url+'map_service/aoi_circle/editCircle',
                                    dataType : 'html',
                                    type : 'POST',
                                    data : {aoipoi_type_id:type_id,aoi_name:$("#name_area_circle").val(),aoi_description:$("#description_area_circle").val(),aoi_circle_lat:data_area_circle[id].aoi_circle_lat,aoi_circle_lon:data_area_circle[id].aoi_circle_lon,aoi_circle_rad:data_area_circle[id].aoi_circle_rad,aoi_id:data_area_circle[id].aoi_id},
                                    success : function(data){
                                        data_area_circle[id] = {'aoi_name':$("#name_area_circle").val(),'aoi_description':$("#description_area_circle").val(),'aoipoi_type_id':type_id,'aoi_id':data_area_circle[id].aoi_id,'aoi_circle_lon':data_area_circle[id].aoi_circle_lon,'aoi_circle_lat':data_area_circle[id].aoi_circle_lat,'aoi_circle_rad':data_area_circle[id].aoi_circle_rad};
                                        var text = "<p><span style='font-weight:bold;'>Nama Area:</span><br />"+$("#name_area_circle").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+$("#description_area_circle").val()+"</p>"+
                                            "<p><span style='font-weight:bold;'>Tipe</span><br />"+name_type+"</p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editCircle("+id+")' /></p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteCircle("+id+")' /></p>";
                                        circle_area[id].unbindPopup();
                                        circle_area[id].bindPopup(text);
                                    }
                                });
                                $( this ).dialog( "close" );
                            },
                            Cancel: function() {
                                $( this ).dialog( "close" );
                            }
                        }}).dialog( "open" );
                }
		
                function editMarker(id){
                    markerPoi[id].closePopup();
                    $("#form_add_marker").each(function(){ this.reset(); });
                    $("#name_marker").val(dataMarkerPoi[id].poi_name);
                    $("#description_marker").val(dataMarkerPoi[id].poi_description);
                    $("#tipe_marker").val(dataMarkerPoi[id].aoipoi_type_id);
                    $("#dialog-post-marker").dialog({buttons: {
                            "Save": function() {
                                var type_id = $("#tipe_marker option:selected").val();
                                var name_type = $("#tipe_marker option:selected").text();
                                $.ajax({
                                    url:conf.url+'map_service/poi/editPOI',
                                    dataType : 'html',
                                    type : 'POST',
                                    data : {aoipoi_type_id:type_id,poi_id:dataMarkerPoi[id].poi_id,poi_name:$("#name_marker").val(),poi_description:$("#description_marker").val(),poi_lat:dataMarkerPoi[id].poi_lat,poi_lon:dataMarkerPoi[id].poi_lon},
                                    success : function(data){
                                        var name_marker = $("#name_marker").val();
                                        var desc_marker = $("#description_marker").val();
                                        var text = "<p><span style='font-weight:bold;'>Nama Marker:</span><br />"+name_marker+"</p>"+
                                            "<p><span style='font-weight:bold;'>Deskripsi</span><br />"+desc_marker+"</p>"+
                                            "<p><span style='font-weight:bold;'>Tipe</span><br />"+name_type+"</p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Edit' onclick='editMarker("+id+")' /></p>"+
                                            "<p><input type='button' class='ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' value='Hapus' onclick='deleteMarker("+id+")' /></p>";
                                        markerPoi[id].unbindPopup();
                                        markerPoi[id].bindPopup(text);
                                        dataMarkerPoi[id] = {poi_name:name_marker,poi_description:desc_marker,poi_lat:dataMarkerPoi[id].poi_lat,poi_lon:dataMarkerPoi[id].poi_lon,aoipoi_type_id:type_id,poi_id:dataMarkerPoi[id].poi_id};	
                                    }
                                });
                                $( this ).dialog( "close" );
                            },
                            Cancel: function() {
                                $( this ).dialog( "close" );
                            }
                        }}).dialog( "open" );
                }

                function deleteMarker(i){
                    if(confirm('Apakah anda akan menghapus area titik ini?')){
                        $.ajax({
                            url:conf.url+'map_service/poi/deletePOI',
                            dataType : 'html',
                            type : 'POST',
                            data : {poi_id:dataMarkerPoi[i].poi_id},
                            success : function(data){
                                // console.log(data);
                                if(data==1){
                                    map.removeLayer(markerPoi[i]);
                                    dataMarkerPoi[i] = [];
                                    markerPoi[i] = [];
                                }else{
                                    alert('area gagal di hapus');
                                }
                            }
                        });
                    }
                }
				
                function deleteArea(i){
                    if(confirm('Apakah anda akan menghapus area poligon ini?')){
                        $.ajax({
                            url:conf.url+'map_service/aoi/deleteAOI',
                            dataType : 'html',
                            type : 'POST',
                            data : {aoi_id:data_area[i].aoi_id},
                            success : function(data){
                                if(data==1){
                                    map.removeLayer(polygon_area[i]);
                                    data_area[i] = [];
                                    polygon_area[i] = [];
                                }else{
                                    alert('area gagal di hapus');
                                }
                            }
                        });
                    }
                }
				
                function deleteCircle(i){
                    if(confirm('Apakah anda akan menghapus area lingkaran ini?')){
                        $.ajax({
                            url:conf.url+'map_service/aoi_circle/deleteCircle',
                            dataType : 'html',
                            type : 'POST',
                            data : {aoi_id:data_area_circle[i].aoi_id},
                            success : function(data){
                                if(data==1){
                                    map.removeLayer(circle_area[i]);
                                    data_area_circle[i] = [];
                                    circle_area[i] = [];
                                }else{
                                    alert('area gagal di hapus');
                                }
                            }
                        });
                    } 
                }
		
                function getPushdata(){
                    socket.emit('reqInitData', {});
                    socket.once('resInitData', function (data) {
                        data = eval('('+data+')');
                        console.log(data);
                        $.each(data,function(j,data){
                                $.each(data.ships,function(i,item){
                                    if(item.protocol=="pos"){
										if(markerKRI[item.shipId] === undefined){
											markerKRIdata[item.shipId] = [];
											markerKRI[item.shipId] = [];
											markerKRIdata[item.shipId]['kri'] = {
                                                title:item.shipId,
                                                shipId:item.shipId,
                                                lat:item.lat,
                                                lon:item.lon,
                                                view:true,
                                                name:item.name,
                                                direction:item.direction,
                                                speed:item.speed,coarse:
                                                item.direction
                                            };
											var text = '<div style="margin: 10px; width: 250px;">'+
												'<a href="#" class="chat-nav">Chat</a>'+
												'<div id="ship"></div><br /><br />'+
												'<div id="personnel"></div><br /><br />'+
												'<div id="logistic"></div><br /><br />'+
												'<div id="ado"></div>'+
												'</div>';
											markerKRI[item.shipId]['kri'] = new L.marker([item.lat,item.lon],{icon:IconKI,iconAngle: parseInt(item.direction),zIndexOffset:1000,title:item.shipId+'-'+item.name})
											.bindLabel('<p align="center">'+item.name+'-'+item.shipId+'<br />'+viewableCoordinate(item.lat,'lat')+' , '+viewableCoordinate(item.lon,'lon')+'<br />Direction: '+item.direction+', Speed: '+item.speed+'</p>')
											.on('click', function(){
												$('#title_panel').text('Informasi Kapal');
												ship_data(item.shipId);
												$('#panelRight_1').show();
												$('#kridata').empty();
												$('#kridata').append(text);
											});
											map.addLayer(markerKRI[item.shipId]['kri']);
											markersSearch.addLayer(markerKRI[item.shipId]['kri']);
											markerKRI[item.shipId]['kri'].on('contextmenu',function(e){
												if(stat_ukur_jarak){
													if(!start_draw){
														start_draw = true;
														measuring_line = new L.Polyline([new L.LatLng(parseFloat(markerKRIdata[item.shipId]['kri'].lat),parseFloat(markerKRIdata[item.shipId]['kri'].lon)),new L.LatLng(parseFloat(markerKRIdata[item.shipId]['kri'].lat),parseFloat(markerKRIdata[item.shipId]['kri'].lon))], {color: 'red'}).addTo(map);
														start_lat = new L.LatLng(parseFloat(markerKRIdata[item.shipId]['kri'].lat),parseFloat(markerKRIdata[item.shipId]['kri'].lon));
													}else if(start_draw==true && !stop_draw){
														stop_draw = true;
														measuring_line.setLatLngs([start_lat,new L.LatLng(parseFloat(markerKRIdata[item.shipId]['kri'].lat),parseFloat(markerKRIdata[item.shipId]['kri'].lon))]);
														var centerPos = new L.LatLng((start_lat.lat + parseFloat(markerKRIdata[item.shipId]['kri'].lat))/2, 
														(start_lat.lng + parseFloat(markerKRIdata[item.shipId]['kri'].lon))/2);
														var distance = start_lat.distanceTo(new L.LatLng(parseFloat(markerKRIdata[item.shipId]['kri'].lat),parseFloat(markerKRIdata[item.shipId]['kri'].lon)));

														popup_distance(distance, centerPos,start_lat,new L.LatLng(parseFloat(markerKRIdata[item.shipId]['kri'].lat),parseFloat(markerKRIdata[item.shipId]['kri'].lon)));
														map.addLayer(distancePopup)
														.fire('popupopen', { popup: distancePopup }).on('popupclose',function(e){hapus_jarak()});
													}
												}
											});
											checkContainLatlngCircleArea(markerKRI[item.shipId]['kri'],'');
											checkContainLatlngPolygonArea(markerKRI[item.shipId]['kri'],'');
											append_search_list(item.name,item.lat,item.lon,'kri');
										}
                                    }else if(stat_view.track==true && item.protocol=='track'){
                                        console.log('update track');
                                        if(markerTrack!=null){
                                            removeTrack();
                                        }
                                        tempTrack.push(L.marker([item.lat,item.lon],{icon:new ShipMarker({iconUrl: conf.url+'assets/img/target-icon/'+item.icon})}).bindLabel('<p align="center">'+item.shipId+'<br />'+viewableCoordinate(item.lat,'lat')+' , '+viewableCoordinate(item.lon,'lon')+'</p>')
                                        .on('contextmenu',function(e){
                                            if(stat_ukur_jarak){
                                                if(!start_draw){
                                                    start_draw = true;
                                                    measuring_line = new L.Polyline([new L.LatLng(parseFloat(item.lat),parseFloat(item.lon)),new L.LatLng(parseFloat(item.lat),parseFloat(item.lon))], {color: 'red'}).addTo(map);
                                                    start_lat = new L.LatLng(parseFloat(item.lat),parseFloat(item.lon));
                                                }else if(start_draw==true && !stop_draw){
                                                    stop_draw = true;
                                                    measuring_line.setLatLngs([start_lat,new L.LatLng(parseFloat(item.lat),parseFloat(item.lon))]);
                                                    var centerPos = new L.LatLng((start_lat.lat + parseFloat(item.lat))/2, 
                                                    (start_lat.lng + parseFloat(item.lon))/2);
                                                    var distance = start_lat.distanceTo(new L.LatLng(parseFloat(item.lat),parseFloat(item.lon)));
                                                    popup_distance(distance, centerPos,start_lat,new L.LatLng(parseFloat(item.lat),parseFloat(item.lon)));
                                                    map.addLayer(distancePopup)
                                                    .fire('popupopen', { popup: distancePopup }).on('popupclose',function(e){hapus_jarak()});
                                                }
                                            }
                                        }));
										append_search_list(item.shipId,item.lat,item.lon,'track');
                                    }
									
                                    if(stat_view.track==false && stat_view.kri==false){
                                        if(markerTrack!=null){
                                            removeTrack();
                                        }
                                        if((markerKRI[item.shipId]['kri']!=undefined || markerKRI[item.shipId]['kri']!=null)){
                                            markerKRI[item.shipId]['kri'].setOpacity(0);
                                            markerKRIdata[item.shipId].view = false;
                                        }
                                    }else if(stat_view.track==true && stat_view.kri==false){
                                        if(tempTrack.length>0){
                                            markerTrack =  L.layerGroup(tempTrack);
                                            map.addLayer(markerTrack);
                                        }
                                        if((markerKRI[item.shipId]['kri']!=undefined || markerKRI[item.shipId]['kri']!=null)){
                                            markerKRI[item.shipId]['kri'].setOpacity(0);
                                            markerKRIdata[item.shipId].view = false;
                                        }
                                    }else if(stat_view.track==false && stat_view.kri==true){
                                        if(markerTrack!=null){
                                            removeTrack();
                                        }
										
                                    }else if(stat_view.track==true && stat_view.kri==true){
                                        if(tempTrack.length>0){
                                            markerTrack =  L.layerGroup(tempTrack);
                                            map.addLayer(markerTrack);
                                        }
										
                                    }
                                });
                        });
                    });
			
                }
				
                function next_move(){
                    socket.on('statupdate', function (data) {
                        data = eval('('+data+')');
                        tempTrack = [];
                        console.log(data);
                        $.each(data,function(j,data){
							if(data.ships != undefined){
								$.each(data.ships,function(i,item){
									console.log(i);
									console.log(item.shipId);
									if(stat_view.kri==true && item.protocol=='pos'){
										if(markerKRIdata[item.shipId]==undefined){
											markerKRIdata[item.shipId] = [];
											markerKRI[item.shipId] = [];
											markerKRIdata[item.shipId]['kri'] = {
                                                title:item.shipId,
                                                shipId:item.shipId,
                                                lat:item.lat,
                                                lon:item.lon,
                                                view:true,
                                                name:item.name
                                            };
											var text = '<div align="center">'+
												'<div id="ship"></div><br /><br />'+
												'<div id="personnel"></div><br /><br />'+
												'<div id="logistic"></div><br /><br />'+
												'<div id="ado"></div>'+
												'</div>';
											markerKRI[item.shipId]['kri'] = new L.marker([item.lat,item.lon],{icon:IconKI,iconAngle: parseInt(item.direction),zIndexOffset:1000,title:item.shipId+'-'+item.name})
											.bindLabel(
                                                '<p align="center">'+item.name+
                                                '-'+item.shipId+
                                                '<br />'+viewableCoordinate(item.lat,'lat')+
                                                ' , '+viewableCoordinate(item.lon,'lon')+
                                                '</p>'
                                            ).on('click', function(){
												ship_data(item.shipId);
												$('#title_panel').text('Informasi Kapal');
												$('#panelRight_1').show();
												$('#kridata').empty();
												$('#kridata').append(text);
												
											});
											map.addLayer(markerKRI[item.shipId]['kri']);
											markersSearch.addLayer(markerKRI[item.shipId]['kri']);
											checkContainLatlngCircleArea(markerKRI[item.shipId]['kri'],'');
											checkContainLatlngPolygonArea(markerKRI[item.shipId]['kri'],'');
											
										}else{
											if(stat_view.kri==true && item.protocol=='pos'){
												console.log('update kri');
												markerKRIdata[item.shipId]['kri'] = {
                                                    title:item.shipId,
                                                    shipId:item.shipId,
                                                    lat:item.lat,
                                                    lon:item.lon,
                                                    view:true,
                                                    name:item.name,
                                                    direction:item.direction,
                                                    speed:item.speed,
                                                    coarse:item.direction
                                                };
												markerKRIdata[item.shipId]['kri'].view=true;
												append_search_list(item.name,item.lat,item.lon,'kri');
											}
										}
										if(stat_view.track==true && stat_view.kri==false){
											if((markerKRI[item.shipId]['kri']!=undefined || markerKRI[item.shipId]['kri']!=null)){
												markerKRI[item.shipId]['kri'].setOpacity(0);
												markerKRIdata[item.shipId].view = false;
											}
										}else if(stat_view.track==false && stat_view.kri==true){
											// if(markerTrack!=null){
												// removeTrack();
											// }
											if((markerKRI[item.shipId]['kri']!=undefined || markerKRI[item.shipId]['kri']!=null)){
												markerKRI[item.shipId]['kri'].setOpacity(1);
												markerKRI[item.shipId]['kri'].unbindLabel();
                                                // marked by SKM17 ship labelling
												markerKRI[item.shipId]['kri'].bindLabel(
                                                    '<p align="center">'+markerKRIdata[item.shipId]['kri'].name+
                                                    '-'+markerKRIdata[item.shipId]['kri'].shipId+
                                                    '<br />'+viewableCoordinate(markerKRIdata[item.shipId]['kri'].lat,'lat')+
                                                    ' , '+viewableCoordinate(markerKRIdata[item.shipId]['kri'].lon,'lon')+
                                                    '<br />Direction: '+markerKRIdata[item.shipId]['kri'].direction+
                                                    ', Speed: '+markerKRIdata[item.shipId]['kri'].speed+'</p>');
												markerKRI[item.shipId]['kri'].setIconAngle(parseInt(markerKRIdata[item.shipId]['kri'].coarse));
												markerKRI[item.shipId]['kri'].setLatLng(new L.LatLng(markerKRIdata[item.shipId]['kri'].lat , markerKRIdata[item.shipId]['kri'].lon));
												markerKRI[item.shipId]['kri'].update();
												markersSearch.addLayer(markerKRI[item.shipId]['kri']);
												append_search_list(item.name,item.lat,item.lon,'kri');
											}
										}else if(stat_view.track==true && stat_view.kri==true){
											// if(tempTrack.length>0){
												// markerTrack =  L.layerGroup(tempTrack);
												// map.addLayer(markerTrack);
												
											// }
											if((markerKRI[item.shipId]['kri']!=undefined || markerKRI[item.shipId]['kri']!=null)){
												markerKRI[item.shipId]['kri'].setOpacity(1);
												markerKRI[item.shipId]['kri'].unbindLabel();
                                                // marked by SKM17 ship labelling
												markerKRI[item.shipId]['kri'].bindLabel(
                                                    '<p align="center">'+markerKRIdata[item.shipId]['kri'].name+
                                                    '-'+markerKRIdata[item.shipId]['kri'].shipId+
                                                    '<br />'+viewableCoordinate(markerKRIdata[item.shipId]['kri'].lat,'lat')+
                                                    ' , '+viewableCoordinate(markerKRIdata[item.shipId]['kri'].lon,'lon')+
                                                    '<br />Direction: '+markerKRIdata[item.shipId]['kri'].direction+
                                                    ', Speed: '+markerKRIdata[item.shipId]['kri'].speed+'</p>'
                                                );
												markerKRI[item.shipId]['kri'].setIconAngle(parseInt(markerKRIdata[item.shipId]['kri'].coarse));
												markerKRI[item.shipId]['kri'].setLatLng(new L.LatLng(markerKRIdata[item.shipId]['kri'].lat , markerKRIdata[item.shipId]['kri'].lon));
												markerKRI[item.shipId]['kri'].update();
												append_search_list(item.name,item.lat,item.lon,'kri');
											}
										}
									}else if(stat_view.track==true && item.protocol=='track'){
										console.log('update track');
										if(markerTrack!=null){
											removeTrack();
										}
										tempTrack.push(L.marker([item.lat,item.lon],{icon:new ShipMarker({iconUrl: conf.url+'assets/img/target-icon/'+item.icon}),title:item.shipId}).bindLabel('<p align="center">'+item.shipId+'<br />'+viewableCoordinate(item.lat,'lat')+' , '+viewableCoordinate(item.lon,'lon')+'</p>')
										.on('contextmenu',function(e){
											if(stat_ukur_jarak){
												if(!start_draw){
													start_draw = true;
													measuring_line = new L.Polyline([new L.LatLng(parseFloat(item.lat),parseFloat(item.lon)),new L.LatLng(parseFloat(item.lat),parseFloat(item.lon))], {color: 'red'}).addTo(map);
													start_lat = new L.LatLng(parseFloat(item.lat),parseFloat(item.lon));
												}else if(start_draw==true && !stop_draw){
													stop_draw = true;
													measuring_line.setLatLngs([start_lat,new L.LatLng(parseFloat(item.lat),parseFloat(item.lon))]);
													var centerPos = new L.LatLng((start_lat.lat + parseFloat(item.lat))/2, 
													(start_lat.lng + parseFloat(item.lon))/2);
													var distance = start_lat.distanceTo(new L.LatLng(parseFloat(item.lat),parseFloat(item.lon)));
													popup_distance(distance, centerPos,start_lat,new L.LatLng(parseFloat(item.lat),parseFloat(item.lon)));
													map.addLayer(distancePopup)
													.fire('popupopen', { popup: distancePopup }).on('popupclose',function(e){hapus_jarak()});
												}
											}
										}));
										append_search_list(item.shipId,item.lat,item.lon,'track');
									}	
								});
								if(stat_view.track==true && stat_view.kri==false){
									if(tempTrack.length>0){
										markerTrack =  L.layerGroup(tempTrack);
										map.addLayer(markerTrack);]
									}
								}else if(stat_view.track==false && stat_view.kri==true){
									if(markerTrack!=null){
										removeTrack();
									}
								}else if(stat_view.track==true && stat_view.kri==true){
									if(tempTrack.length>0){
										markerTrack =  L.layerGroup(tempTrack);
										map.addLayer(markerTrack);
									}
								}
							}
                        });
                    });
                }
            
                function ship_data(id){
                    getDataAdo(id,"ado");
                    getDataPersonnel(id,"personnel");
                    getDataLogistic(id,"logistic");
                    getDataShip(id,"ship");
                }
				
				function append_search_list(name,lat,lon,type){	
				// var keyword = '';

				// pattern : ([\s^\w]*)?keyword([\s$\w]+)?
					var found = false;
					var index = 0;
					$.each(array_search,function(i,item){
						if(item.name==name){
							found = true;
							index = i;
							// console.log(item.name);
							// console.log(name);
						}
					});
					if(!found){
						array_search.push(
							{
								name : name,
								lat:lat,
								lon:lon,
								type:type
							}
						);
					}else{
						array_search[index] = {
								name : name,
								lat:lat,
								lon:lon,
								type:type
						};
					}
				}
		
                function changeMode(currMode){
                    socket.emit('reqChangeMode', {'mode': currMode});
                }
		
                function getDataLogistic(id,type){
                    socket.emit('reqLogistics', { shipId: id });
                    socket.once('resLogistics', function (data) {
                        console.log(data);
                        $("#logistic").html("");
                        var content = '<p style="font-weight:bold;" align="center">Informasi Logistik</p>';
                        $("#logistic").append(content);
                        $.each(data,function(i,item){
                            var result = '<p>'+item.log_desc+' :  '+item.log_value+' '+item.log_metric+'</p>';
                            $("#logistic").append(result);
                        });
                    });
                }
		
                function getDataShip(id,type){
                    socket.emit('reqShip', { shipId: id });
                    socket.once('resShip', function (data) {
                        console.log(data);
                        $("#ship").html("");
                        $.each(data,function(i,item){
                            var result = '<p style="font-weight:bold;" align="center">'+item.ship_name+'-'+item.ship_id+'</p>'+
                                '<p>Posisi :  '+viewableCoordinate(item.ship_lat,'lat')+' , '+viewableCoordinate(item.ship_long,'lon')+'</p>'+
                                '<p>Halu :  '+item.ship_direction+'</p>'+
                                '<p>Cpt :  '+item.ship_speed+' Knott</p>'+
                                '<p>Pemilik :  '+item.corps_name+' </p>'+
                                '<p>Nama Operasi :  '+item.operation_name+' </p>'+
                                '<p>Deskripsi Operasi :  '+item.operation_description+' </p>';
                            $("#ship").append(result);
                        });
                    });
                }
		
                function getDataAdo(id,type){
                    socket.emit('reqADO', { shipId: id });
                    socket.once('resADO', function (data) {
                        console.log(data);
                        $("#ado").html("");
                        var content = '<p style="font-weight: bold;" align="center">ADO</p><p>Laporan : </p>';
                        $("#ado").append(content);
                        var result = '';
                        var time = null;
                        $.each(data,function(i,item){
                            time = (item.ado_time)?item.ado_time:'';
                            result += '<p style="border-top: 1px solid #2E6E9E; padding: 5px 0; line-height: 12px;">'
                                + '<span style="font-size: 10px; font-weight: bold; color: #999;">'+time+'</span> <br /><span style="font-size:12px; line-height: 13px;">' + item.ado_report + '</span></p>'; 
					
                        });
                        $("#ado").append(result);
                    });
                }
			
                function getDataPersonnel(id,type){
                    socket.emit('reqPersonnel', { shipId: id });
                    socket.once('resPersonnel', function (data) {
                        console.log(data);
                        $("#personnel").html("");
                        var content = '<p style="font-weight:bold;" align="center">Informasi Personil</p>';
                        $("#personnel").append(content);
                        var result = '';
                        $.each(data,function(i,item){
                            if(item.psn_code==10){
                                $("#personnel").append('<p>'+item.psn_desc+' : '+item.psn_name+'</p>');
                            }else{
                                result += '<p>Jumlah '+item.psn_desc+':  '+item.psn_value+' '+item.psn_metric+'</p>';
                            }
                        });
                        $("#personnel").append(result);
                    });
                }
			
                function getMarines(){
				
                    socket.emit('reqMarines', {});
                    socket.once('resMarines', function (data) {
                        console.log('marine');
                        console.log(data);
                        dataMarine = data;
						if(dataMarine!=null){
							$.each(dataMarine,function(i,item){
								item.mar_lat = parseFloat(item.mar_lat);
								item.mar_lon = parseFloat(item.mar_lon);
								append_search_list(item.corps_name,item.mar_lat,item.mar_lon,'marines');
							});
						}
                    });
                }
			
                function getStation(){
				
                    socket.emit('reqStation', {});
                    socket.once('resStation', function (data) {
                        console.log('station');
                        console.log(data);
                        dataStation = data;
                    });
                }
			
                function getIntelegentInfo(){
				
                    socket.emit('reqIntelligence', {});
                    socket.once('resIntelligence', function (data) {
                        console.log('intelegent');
                        console.log(data);
                        if(data.length>0){
                            for(var i in data){
                                dataIntelegent = data[i].find_intelligence_info;
                            }
                            dataIntelegent = eval('('+dataIntelegent+')');
                            $.each(dataIntelegent,function(i,item){
                                if(item.type=="circle"){
                                    drawCircle(item);
                                }else if(item.type=="polygon"){
                                    drawArea(item);
                                }else if(item.type=="point"){
                                    drawMarker(item);
                                }
                            });
                        }
                    });
                }
		
                function removeLayer(id) {
                    map.removeLayer(markersLayer[id]);				
                }
		
                function removeTrack() {
                    map.removeLayer(markerTrack);				
                }
			
                function removeAdditional(name){
                    map.removeLayer(name);
                }
		
                function popup_distance(distance, coord,start_pos,stop_pos) {
                    start_pos = start_pos || "";
                    stop_pos = stop_pos || "";
                    var baringan = ""; 
                    if (!distancePopup) {
                        distancePopup = new L.Popup(this.options, this);
                    }
                    var miles = parseFloat((distance/1000) * 0.6214);
                    if(stop_draw){
                        if(start_pos!="" && stop_pos!=""){
                            baringan = "<b>Baringan: </b><br />"+calculate_bearing(start_pos,stop_pos)+"<br />";
                        }
                        distancePopup.setContent("<b>Jarak: </b></br>"+miles.toFixed(2)+" mil<br />"+baringan+"<input type='button' onclick='hapus_jarak();' value='Hapus Jarak' />");
                    }else{
                        distancePopup.setContent("<b>Jarak: </b></br>"+miles.toFixed(2)+" mil");
                    }
                    distancePopup.setLatLng(coord);
                }
		
                function OnmouseClickTrack(e){
                    if(stat_ukur_jarak){
                        if(!start_draw){
                            start_draw = true;
                            measuring_line = new L.Polyline([new L.LatLng(markerKRIdata[item.shipId]['kri'].lat,markerKRIdata[item.shipId]['kri'].lon),new L.LatLng(markerKRIdata[item.shipId]['kri'].lat,markerKRIdata[item.shipId]['kri'].lon)], {color: 'red'}).addTo(map);
                            start_lat = new L.LatLng(markerKRIdata[item.shipId]['kri'].lat,markerKRIdata[item.shipId]['kri'].lon);
                        }else if(start_draw==true && !stop_draw){
                            stop_draw = true;
                            measuring_line.setLatLngs([start_lat,new L.LatLng(markerKRIdata[item.shipId]['kri'].lat,markerKRIdata[item.shipId]['kri'].lon)]);
                            var centerPos = new L.LatLng((start_lat.lat + markerKRIdata[item.shipId]['kri'].lat)/2, 
                            (start_lat.lng + markerKRIdata[item.shipId]['kri'].lon)/2);
                            var distance = start_lat.distanceTo(new L.LatLng(markerKRIdata[item.shipId]['kri'].lat,markerKRIdata[item.shipId]['kri'].lon));

                            popup_distance(distance, centerPos,start_lat,new L.LatLng(markerKRIdata[item.shipId]['kri'].lat,markerKRIdata[item.shipId]['kri'].lon));
                            map.addLayer(distancePopup)
                            .fire('popupopen', { popup: distancePopup }).on('popupclose',function(e){hapus_jarak()});
                        }
                    }
                }
		
                function hapus_jarak(){
                    start_draw = false;
                    stop_draw = false;
                    start_lat = null;
                    start_lon = null;
                    if(measuring_line!=null){
                        map.removeLayer(measuring_line);
                    }
                    measuring_line = null;
                    if(distancePopup!=null){
                        map.removeLayer(distancePopup);
                    }
                    distancePopup = false;
                }
		
                function calculate_bearing(start_pos,stop_pos){
                    var lat1 = Geo.parseDMS(start_pos.lat);
                    var lon1 = Geo.parseDMS(start_pos.lng);
                    var lat2 = Geo.parseDMS(stop_pos.lat);
                    var lon2 = Geo.parseDMS(stop_pos.lng);
                    var p1 = new LatLon(lat1, lon1);
                    var p2 = new LatLon(lat2, lon2);

                    return Geo.toBrng(p1.bearingTo(p2),'dm');
                }
		
                function viewableCoordinate(deg,type){
                    var sign = '';
                    if(type=='lat'){
                        var result = Geo.toLat(deg,'dms',4);
                    }else{
                        var result = Geo.toLon(deg,'dms',4);
                    }
                    // if(deg < 0){
                    // sign = '-';
                    // }
                    var deg = Math.floor(Math.abs(deg));

                    return sign+result;
                }
		
                function checkContainLatlngCircleArea(marker,i){
                    if(i==''){
                        for(var i in circle_area){
                            var text = '';
						
						
                            if(isPointInCircle(circle_area[i]._latlng.lat,circle_area[i]._latlng.lng,(circle_area[i].getRadius()/1000),marker._latlng.lat,marker._latlng.lng)){
                                text += marker.options.title+', ';
                            }
						
					
                            if(text!=""){
                                text.substr(-2);
                                text +=' berada di wilayah '+data_area_circle[i].aoi_name+'';
                                messageWarning(text);
                            }
                        }
                    }else{
                        var text = '';
				
					
                        if(isPointInCircle(circle_area[i]._latlng.lat,circle_area[i]._latlng.lng,(circle_area[i].getRadius()/1000),marker._latlng.lat,marker._latlng.lng)){
                            text += marker.options.title+', ';
                        }
					

                        if(text!=""){
                            text.substr(-2);
                            text +=' berada di wilayah '+data_area_circle[i].aoi_name+'';
                            messageWarning(text);
                        }
                    }
                }
                function checkContainLatlngPolygonArea(marker,i){
                    if(i==''){
                        for(var i in polygon_area){
                            var text = '';
						
                            if(polygon_area[i].getBounds().contains(marker._latlng)){
                                text += marker.options.title+', ';
                            }
					
                            if(text!=''){
                                text.substr(-2);
                                text +=' berada di wilayah '+data_area[i].aoi_name+'';
                                messageWarning(text);
                            }
					
                        }
                    }else{
                        var text = '';
					
                        if(polygon_area[i].getBounds().contains(marker._latlng)){
                            text += marker.options.title+', ';
                        }
				
                        if(text!=''){
                            text.substr(-2);
                            text +=' berada di wilayah '+data_area[i].aoi_name+'';
                            messageWarning(text);
                        }
                    }
                }
		
                function messageWarning(text){
                    if(text!=''){
                        $.jGrowl(text, { 
                            header: 'Peringatan !!',
                            theme: 'warning',
                            speed: 'slow',
                            animateOpen: { 
                                height: "show"
                            },
                            animateClose: { 
                                height: "hide"
                            }
                        });
                    }
                }

                function isPointInCircle(centerX,centerY,radius,x,y)
                {
                    var R = 6371; // Radius of the Earth in km
                    var dLat = (x - centerX) * Math.PI / 180;
                    var dLon = (y - centerY) * Math.PI / 180;
                    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                        Math.cos(centerX * Math.PI / 180) * Math.cos(x * Math.PI / 180) *
                        Math.sin(dLon / 2) * Math.sin(dLon / 2);
                    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
                    var d = R * c;
                    if( d < radius ){
                        return true;
                    }
                    return false;
                }
                
                var count_line=2;
                function add_more_line(){
                    var line = document.createElement('div');
                    line.setAttribute('id', 'line'+ count_line);
                    line.innerHTML =
                        '<p style="border-bottom: 1px solid #CCC; padding-bottom: 5px; margin-bottom: 5px;">Titik' + count_line + '</p>'+
                        '<label for="lattitude">Lattitude :</label>'+
                        '<div style="width: 104px; float: left; margin: 0 20px 0 0;">'+
                        '<input type="text" name="pol_lat_degree'+count_line+'" size="5" class="text ui-widget-content ui-corner-all pol_lat_degree'+count_line+'" style="float: left; margin-right: 3px;" onkeypress="return validDegree(event,\'pol_lat_degree'+count_line+'\')" /> <span class="symbol">&#176;</div>'+
                        '</div>'+
                        '<div style="width: 104px; float: left; margin: 0 20px 0 0;">'+
                        '<input type="text" name="pol_lat_minute'+count_line+'" size="5" class="text ui-widget-content ui-corner-all pol_lat_minute'+count_line+'" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,\'pol_lat_minute'+count_line+'\')"/> <span class="symbol">&#39;</div>'+
                        '</div>'+
                        '<div style="width: 104px; float: left; margin: 0 20px 0 0;">'+
                        '<input type="text" name="pol_lat_second'+count_line+'" size="5" class="text ui-widget-content ui-corner-all pol_lat_second'+count_line+'" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,\'pol_lat_second'+count_line+'\')"/> <span class="symbol">&#34;</div>'+
                        '</div>'+
                        '<select name="pol_lat_point'+count_line+'" class="selecting" style="width: 91px;">'+
                        '<option value="U">U</option>'+
                        '<option value="S">S</option>'+
                        '</select>'+
                        '<label for="lattitude">Longitude :</label>'+
                        '<div style="width: 104px; float: left; margin: 0 20px 0 0;">'+
                        '<input type="text" name="pol_lon_degree'+count_line+'" size="5" class="text ui-widget-content ui-corner-all pol_lon_degree'+count_line+'" style="float: left; margin-right: 3px;" onkeypress="return validDegree(event,\'pol_lon_degree'+count_line+'\')" /> <span class="symbol">&#176;</div>'+
                        '</div>'+
                        '<div style="width: 104px; float: left; margin: 0 20px 0 0;">'+
                        '<input type="text" name="pol_lon_minute'+count_line+'" size="5" class="text ui-widget-content ui-corner-all pol_lon_minute'+count_line+'" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,\'pol_lon_minute'+count_line+'\')"/> <span class="symbol">&#39;</div>'+
                        '</div>'+
                        '<div style="width: 104px; float: left; margin: 0 20px 0 0;">'+
                        '<input type="text" name="pol_lon_second'+count_line+'" size="5" class="text ui-widget-content ui-corner-all pol_lon_second'+count_line+'" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,\'pol_lon_second'+count_line+'\')"/> <span class="symbol">&#34;</div>'+
                        '</div>'+
                        '<select name="pol_lon_point'+count_line+'" class="selecting" style="width: 91px;">'+
                        '<option value="T">T</option>'+
                        '<option value="B">B</option>'+
                        '</select>';
                    $("#add_more_line").append(line);
                    $("#total_line_polygon").val(count_line);
                    count_line++;
                }
				
                function set_drawing_area(){
                    if(!stat_draw_area){
                        switch(type_draw_area){
                            case 'polygon':
                                draw_circle.disable();
                                draw_polygon.enable();
                                draw_point.disable();
                                console.log('polygon');
                                break;
                            case 'circle':
                                draw_circle.enable();
                                draw_polygon.disable();
                                draw_point.disable();
                                break;
                            case 'point':
                                draw_circle.disable();
                                draw_polygon.disable();
                                draw_point.enable();
                                break;
                        }
                        stat_draw_area = true;
                        $('.cancel_draw').show();
                    }else{
                        draw_circle.disable();
                        draw_polygon.disable();
                        draw_point.disable();
                        stat_draw_area = false;
                        $('.cancel_draw').hide();
                    }
                }
                var regEx = new RegExp(/^[0-9]{1,45}$/);
                function validDegree(event,name){
                    var charr = String.fromCharCode( event.keyCode );
                    var string = $( "."+name+"" ).val() + charr;
                    if(string.match( regEx ) && parseInt(string) <= 360) {
                        return true;
                    }else{
                        return false;
                    }
                }
                function validMinuteSecond(event,name){
                    var charr = String.fromCharCode( event.keyCode );
                    var string = $( "."+name+"" ).val() + charr;
                    if(string.match( regEx ) && parseInt(string) <= 59) {
                        return true;
                    }else{
                        return false;
                    }
                }
				
				function find(arr) {
					var result = [];

					for (var i in arr) {
						if (arr[i].match(/oo/)) {
							result.push(arr[i]);
						}
					}

					return result;
				}

                //chat engine start
                function initChatEngine(){

                    var selectedClients = null;

                    socket.emit('reqClientList');
                    socket.once('resClientList', function(clients){
                        console.log('CLIENT LISTS : '+JSON.stringify(clients));
                        console.log(clients);
                        $.each(clients, function(idx, client){
                            var client = 
                                '<li>'+
                                    '<a href="#" class="close-chat">X</a>'+
                                    '<a href="'+client.chatId+'">'+client.chatName+'</a>'+
                                '</li>';

                            $('#contact-list').append(client);
                        });
                    });

                    //input text id : chat-input
                    //submit button id : chat-submit

                    socket.on('chat', function(data){
                        //append to chat history
						
						data = eval('('+data+')');
						console.log(data);
                        $.each(data, function(i, item ){
                            var time = new Date(item.timestamp);
							
                            var sender = markerKRIdata[item.from]['kri'].name;
                            var content = item.content;
                            var chatComponent = 
                                '<div class="chat-me chat-user">'+
                                    '<span class="timing">'+month[time.getUTCMonth()]+' '+time.getDate()+','+time.getFullYear()+' '+time.getUTCHours()+':'+time.getMinutes()+':'+time.getSeconds()+'</span>'+
                                    '<span class="name">'+sender+':</span><br />'+
                                    content+
                                '</div>';
                            $('#chat-content').append(chatComponent);
                        });
                        

                    });

                    $('ul#contact-list li a.activate').click(function(e){
                        e.preventDefault();
                        /*todo : haven't run well yet. need to find a way how to get the href's value*/
                        var id = $(this).attr('href');
                        console.log(id);

                        socket.emit('reqChatHistory', {from : id, to : id  });
                    });

                    socket.once('resChatHistory', function(chats){
                        $('#chat-content').html('');
                        chats.forEach(function(chat){
                            var chatComponent = 
                            '<div class="chat-me">'+
                                '<span class="timing">'+chat.time+'</span>'+
                                '<span class="name">'+chat.sender+':</span><br />'+
                                chat.content+
                            '</div>';
                            $('#chat-content').append(chatComponent);
                        })
                    });

                    $('#chat-submit').click(function(){
                        var msgToSend = $('#chat-input').val();
                        
                        //append to chat history
						var time = new Date();
                        var time = month[time.getUTCMonth()]+' '+time.getDate()+','+time.getFullYear()+' '+time.getUTCHours()+':'+time.getMinutes()+':'+time.getSeconds();
                        var sender = 'Puskodal';
                        var content = msgToSend;

                        socket.emit('sendMsg',{'from' : 'P', 'to': '1' , priority: 3, 'content' : content});

                        var chatComponent = 
                            '<div class="chat-you chat-user">'+
                                '<span class="timing">'+time+'</span>'+
                                '<span class="name">'+sender+':</span><br />'+
                                content+
                            '</div>';
                        $('#chat-content').append(chatComponent);

                        $('#chat-input').val('');

                    });
					$('.search-button').click(function(event){
						event.preventDefault();
						$('.search-input').show().focus();
						$('.search-cancel').show();
						$(this).hide();
						// console.log(array_search);
					});
					$('.search-cancel').click(function(event){
						event.preventDefault();
						$('.search-input').val('').hide();
						$('.search-tooltip').empty().hide();
						$(this).hide();
						$('.search-button').show();
					});
					$('.search-input').keyup(function(){
						var src_keyword = $(this).val();
						$('.search-tooltip').empty();
						var it_up = 0;
						$.each(array_search,function(i,item){
							var search = new RegExp(src_keyword.toLowerCase(), "gi");
							var item_search = item.name.toLowerCase();
							if(item_search.match(search) && src_keyword.length>0){
								if(item.type=="marines" && stat_view.marine==true){
									$('.search-tooltip').append('<a class="search-tip" style="cursor:pointer;" onclick="setView('+item.lat+','+item.lon+',\''+item.type+'\',\''+item.name+'\')" >'+item.name+'</a>');
									it_up++;
								}else if(item.type=="kri" && stat_view.kri==true){
									$('.search-tooltip').append('<a class="search-tip" style="cursor:pointer;" onclick="setView('+item.lat+','+item.lon+',\''+item.type+'\',\''+item.name+'\')" >'+item.name+'</a>');
									it_up++;
								}else if(item.type=="track" && stat_view.kri==true){
									$('.search-tooltip').append('<a class="search-tip" style="cursor:pointer;" onclick="setView('+item.lat+','+item.lon+',\''+item.type+'\',\''+item.name+'\')" >'+item.name+'</a>');
									it_up++;
								}
							}else if(src_keyword.length==0){
								$('.search-tooltip').empty().hide();
							}
						});
						if(it_up>0){
							$('.search-tooltip').show();
						}
					}).keydown(function(){
						var src_keyword = $(this).val();
						$('.search-tooltip').empty();
						var it_down = 0;
						$.each(array_search,function(i,item){
							var search = new RegExp(src_keyword.toLowerCase(), "gi");
							var item_search = item.name.toLowerCase();
							if(item_search.match(search) && src_keyword.length>0){
								if(item.type=="marines" && stat_view.marine==true){
									$('.search-tooltip').append('<a class="search-tip" style="cursor:pointer;" onclick="setView('+item.lat+','+item.lon+',\''+item.type+'\',\''+item.name+'\')" >'+item.name+'</a>');
									it_down++;
								}else if(item.type=="kri" && stat_view.kri==true){
									$('.search-tooltip').append('<a class="search-tip" style="cursor:pointer;" onclick="setView('+item.lat+','+item.lon+',\''+item.type+'\',\''+item.name+'\')" >'+item.name+'</a>');
									it_down++;
								}else if(item.type=="track" && stat_view.kri==true){
									$('.search-tooltip').append('<a class="search-tip" style="cursor:pointer;" onclick="setView('+item.lat+','+item.lon+',\''+item.type+'\',\''+item.name+'\')" >'+item.name+'</a>');
									it_down++;
								}
							}else if(src_keyword.length==0){
								$('.search-tooltip').empty().hide();
							}
						});
						if(it_down>0){
							$('.search-tooltip').show();
						}
					}).click(function(){
						$(this).focus();
					});
                }
				
				function setView(lat,lon,type,text){
					$('.search-tooltip').empty().hide();
					$('.search-input').val(text);
					map.panTo(new L.LatLng(parseFloat(lat), parseFloat(lon)),{animate:true,duration:1,easeLinearity:100});
					if(circleAnimation!=null){
						map.removeLayer(circleAnimation);
					}
					circleAnimation = new L.CircleMarker([parseFloat(lat), parseFloat(lon)],{
						radius: 10,
						weight: 3,
						color: '#e03',
						stroke: true,
						fill: false,
						title: '',
						//TODO add custom icon!	
						marker: false	//show icon optional, show only circleLoc
					}); 
					map.addLayer(circleAnimation);
				}
                //chat engine end.
        </script>
        <script type="text/javascript">
                $(document).ready(function(){
                    $('.ukur_jarak').click(function(event){
                        event.preventDefault();
                        if(stat_ukur_jarak){
                            stat_ukur_jarak = false;
                            hapus_jarak();
                            $(this).text('Ukur Jarak');
                        }else{
                            stat_ukur_jarak = true;
                            $(this).text('Batal Ukur Jarak');
                        }
                    });
                    $('.cancel_draw').click(function(event){
                        event.preventDefault();
                        set_drawing_area();
                    });
                    $('#panelRight_1').panel({
                        collapseType:'slide-right',
                        'collapsible':false,
                        trueVerticalText:true,
                        vHeight:'10px',
                        width:'200px'
                    });
                    $('#panelRight_1').hide();
                
                    $('a.chat-nav, .chat-tok').live('click', function(e){
                        e.preventDefault();
                    
                        $('#dialog-chat').dialog('open');
                        $('ul#contact-list li a').removeClass('activate');
                        $('ul#contact-list li:first-child a').addClass('activate'); //Ini default kalo kita pilih kapal yang mana
                    
                    });
                
                    $('ul#contact-list li a').live('click', function(e){
                        e.preventDefault();
                        
                        $('ul#contact-list li a').removeClass('activate');
                        $(this).addClass('activate');
                        console.log($(this).val());
                    });
                
                    $('.dropdowen').click(function(){
                    
                        if($('ul.hasil-drop').is(':visible')){
                            $('ul.hasil-drop').slideUp('fast');
                        }else{
                            $('ul.hasil-drop').slideDown('fast');
                        }
                    });
                    
                    $( "#circlemanual" ).click(function(e){
                        e.preventDefault();
                        if(!stat_draw_area){
                            $('#polygon').hide();
                            $('#latlon').show();
                            $('#radius').show();
                            $('#add_more_line').empty();
                            $("#post-form").attr("action", "<?php echo base_url() ?>map_service/aoi_circle/saveFormCircle");
                            $( "#dialog-postarea-manual" ).dialog({buttons: {
                                    "Tambah Area dari Map": function() {
                                        type_draw_area = 'circle';
                                        set_drawing_area();
                                        $( this ).dialog( "close" );
                                    },
                                    "Simpan Area": function() {
                                        $("#post-form").submit();
                                        $( this ).dialog( "close" );
                                    },
                                    'Batal': function() {
                                        $( this ).dialog( "close" );
                                    }
                                }});
                            $( "#dialog-postarea-manual" ).dialog( "open" );
                        }else{
                            alert('klik tombol batalkan tambah area terlebih dahulu');
                        }
                    });
                    $( "#polygonmanual" ).click(function(e){
                        e.preventDefault();
                        if(!stat_draw_area){
                            $('#latlon').hide();
                            $('#radius').hide();
                            $('#polygon').show();
                            $('#total_line_polygon').val('1');
                            count_line = 2;
                            $("#post-form").attr("action", "<?php echo base_url() ?>map_service/aoi/saveFormAOI");
                            $( "#dialog-postarea-manual" ).dialog({buttons: {
                                    "Tambah Area dari Map": function() {
                                        type_draw_area = 'polygon';
                                        set_drawing_area();
                                        $( this ).dialog( "close" );
                                    },
                                    "Simpan Area": function() {
                                        $("#post-form").submit();
                                        $( this ).dialog( "close" );
                                    },
                                    'Batal': function() {
                                        $( this ).dialog( "close" );
                                    }
                                }});
                            $( "#dialog-postarea-manual" ).dialog( "open" );
                        }else{
                            alert('klik tombol batalkan tambah area terlebih dahulu');
                        }
                    });
                    $( "#pointmanual" ).click(function(e){
                        e.preventDefault();
                        if(!stat_draw_area){
                            $('#radius').hide();
                            $('#polygon').hide();
                            $('#latlon').show();
                            $('#add_more_line').empty();
                            $("#post-form").attr("action", "<?php echo base_url() ?>map_service/poi/saveFormPOI");
                            $( "#dialog-postarea-manual" ).dialog({buttons: {
                                    "Tambah Area dari Map": function() {
                                        type_draw_area = 'point';
                                        set_drawing_area();
                                        $( this ).dialog( "close" );
                                    },
                                    "Simpan Area": function() {
                                        $("#post-form").submit();
                                        $( this ).dialog( "close" );
                                    },
                                    'Batal': function() {
                                        $( this ).dialog( "close" );
                                    }
                                }});
                            $( "#dialog-postarea-manual" ).dialog( "open" );
                        }else{
                            alert('klik tombol batalkan tambah area terlebih dahulu');
                        }
                    });
                    $( ".lapsithar" ).click(function(e){
                        e.preventDefault();
                        $("#lapsithar_form").attr("action", "<?php echo base_url() ?>admin/areal_report_ctrl/save");
                        $( "#dialog-lapsithar" ).dialog({buttons: {
                                "Simpan Lapsithar": function() {
                                    $("#lapsithar_form").submit();
                                    $( this ).dialog( "close" );
                                },
                                'Batal': function() {
                                    $( this ).dialog( "close" );
                                }
                            }});
                        $( "#dialog-lapsithar" ).dialog( "open" );
                    });
                    $('.logout_dialog').click(function(){
                        var page = $(this).attr("href");
                        var $dialog = $('<div title="Logout"></div>')
                        .html('<p>Are you sure want to logout? </p>').dialog({
                            autoOpen: false,
                            width: 280,
                            show: "fade",
                            hide: "fade",
                            modal: true,
                            resizable: false,
                            buttons: {
                                "Ok": function() {
                                    $(this).dialog("close");
                                    window.location = page;
                                },
                                "Cancel": function() {
                                    $(this).dialog("close");
                                }
                            }
                        });
                        $dialog.dialog('open');
                        return false;
                    });
                });
        </script>
    </head>
    <body>
        <a href="#" id="logout" class="lapsithar" style="margin: 10px 510px 0 0; width: 100px; text-align: center;">Lapsithar</a>
        <a href="#" id="logout" class="ukur_jarak" style="margin: 10px 380px 0 0; width: 100px; text-align: center;">Ukur Jarak</a>
        <a href="#" id="logout" class="cancel_draw" style="margin: 10px 500px 0 0; width: 100px; text-align: center;display:none;">Batalkan Tambah Area</a>
        <div class="dropdowen" style="width: 100px;">
            Tambah Area
            <ul class="hasil-drop" style="display: none;">
                <li><a href="#" id="circlemanual">Lingkaran</a></li>
                <li><a href="#" id="polygonmanual">Poligon</a></li>
                <li><a href="#" id="pointmanual">Titik</a></li>
            </ul>
        </div>

        <a href="#" id="logout" style="margin: 10px 130px 0 0; width: 100px; text-align: center;" class="chat-tok">Chat <span id="chat-num">(1)</span></a>
        <a href="<?php echo base_url() ?>home/logout" id="logout" class="logout_dialog">Log Out</a>
        <div id="lRight">
            <div id="panelRight_1" class="panel" style="position:relative; z-index: 9999; width: auto !important;">
                <h3><div style="margin: 5px 10px;"><span id="title_panel">Informasi Kapal</span><span onclick="$('#panelRight_1').hide();" style="float: right;">Tutup</span></div></h3>
                <div id="kridata"></div>
            </div>
        </div>
        <div style="width:100%; height:100%" id="map">
		
		</div>
        <div id="dialog-post-area" title="Input Area Polygon">
            <form id="form_add_area_polygon">
                <fieldset>
                    <label for="name_area">Nama Area Polygon</label>
                    <input type="text" name="name" id="name_area_polygon" class="text ui-widget-content ui-corner-all" />
                    <label for="description_area">Deskripsi Area</label>
                    <textarea name="description" id="description_area_polygon" class="text ui-widget-content ui-corner-all" style="height: 100px;"></textarea>
                    <label for="tipe_operasi" style="margin-bottom: 2px;">Tipe: </label>
                    <select  class="selecting" id="tipe_area_polygon">
                        <?php foreach ($type as $row) { ?>
                            <option value="<?php echo $row->aptype_id ?>"><?php echo $row->aptype_name ?></option>
                        <?php } ?>
                    </select>
                </fieldset>
            </form>
        </div>

        <div id="dialog-post-marker" title="Input Marker">
            <form id="form_add_marker">
                <fieldset>
                    <label for="name_marker">Nama Marker</label>
                    <input type="text" name="name" id="name_marker" class="text ui-widget-content ui-corner-all" />
                    <label for="description_area">Deskripsi Marker</label>
                    <textarea name="description" id="description_marker" class="text ui-widget-content ui-corner-all" style="height: 100px;"></textarea>
                    <label for="tipe_operasi_marker" style="margin-bottom: 2px;">Tipe: </label>
                    <select  class="selecting" id="tipe_marker">
                        <?php foreach ($type as $row) { ?>
                            <option value="<?php echo $row->aptype_id ?>"><?php echo $row->aptype_name ?></option>
                        <?php } ?>
                    </select>
                </fieldset>
            </form>
        </div>

        <div id="dialog-post-circle" title="Input Area Lingkaran">
            <form id="form_add_circle">
                <fieldset>
                    <label for="name_area_circle">Nama Area Lingkaran</label>
                    <input type="text" name="name" id="name_area_circle" class="text ui-widget-content ui-corner-all" />
                    <label for="description_area_circle">Deskripsi Area Lingkaran</label>
                    <textarea name="description" id="description_area_circle" class="text ui-widget-content ui-corner-all" style="height: 100px;"></textarea>
                    <label for="tipe_operasi_marker" style="margin-bottom: 2px;">Tipe : </label>
                    <select  class="selecting" id="tipe_area_circle">
                        <?php foreach ($type as $row) { ?>
                            <option value="<?php echo $row->aptype_id ?>"><?php echo $row->aptype_name ?></option>
                        <?php } ?>
                    </select>
                </fieldset>
            </form>
        </div>

        <div id="dialog-postarea-manual" title="Input Area Lingkaran">
            <form id="post-form" action="<?php echo base_url() ?>/map_service" method="post">
                <fieldset>
                    <label for="name_area">Nama Area:</label>
                    <input type="text" name="name" class="text ui-widget-content ui-corner-all" />

                    <label for="description_area">Deskripsi Area:</label>
                    <textarea name="description" class="text ui-widget-content ui-corner-all" style="height: 100px;"></textarea>

                    <label for="category">Categori:</label>
                    <select name="category" class="selecting">
                        <?php foreach ($type as $row) { ?>
                            <option value="<?php echo $row->aptype_id ?>"><?php echo $row->aptype_name ?></option>
                        <?php } ?>
                    </select>

                    <!-- optional for circle/point -->
                    <div id="latlon">
                        <label for="lattitude">Lattitude:</label>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="lat_degree" size="5" class="text ui-widget-content ui-corner-all lat_degree" style="float: left; margin-right: 3px;" onkeypress="return validDegree(event,'lat_degree')"/> <span class="symbol">&#176;</span>
                        </div>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="lat_minute" size="5" class="text ui-widget-content ui-corner-all lat_minute" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'lat_minute')"/> <span class="symbol">&#39;</span>
                        </div>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="lat_second" size="5" class="text ui-widget-content ui-corner-all lat_second" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'lat_second')"/> <span class="symbol">&#34;</span>
                        </div>
                        <select name="lat_point" class="selecting" style="width: 91px;">
                            <option value="U">U</option>
                            <option value="S">S</option>
                        </select>

                        <label for="lattitude">Longitude:</label>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="lon_degree" size="5" class="text ui-widget-content ui-corner-all lon_degree" style="float: left; margin-right: 3px;" onkeypress="return validDegree(event,'lon_degree')"/> <span class="symbol">&#176;</span>
                        </div>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="lon_minute" size="5" class="text ui-widget-content ui-corner-all lon_minute" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'lon_minute')"/> <span class="symbol">&#39;</span>
                        </div>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="lon_second" size="5" class="text ui-widget-content ui-corner-all lon_second" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'lon_second')"/> <span class="symbol">&#34;</span>
                        </div>
                        <select name="lon_point" class="selecting" style="width: 91px;">
                            <option value="T">T</option>
                            <option value="B">B</option>
                        </select>
                    </div>
                    <!-- optional for Circle -->
                    <div id="radius">
                        <label for="radius">Radius:</label>
                        <input type="text" name="radius" size="10" class="text ui-widget-content ui-corner-all" />
                    </div>
                    <!-- optional for polygon -->
                    <div id="polygon">
                        <p style="border-bottom: 1px solid #CCC; padding-bottom: 5px; margin-bottom: 5px;">Titik 1</p>
                        <label for="lattitude">Lattitude:</label>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="pol_lat_degree1" size="5" class="text ui-widget-content ui-corner-all pol_lat_degree1" style="float: left; margin-right: 3px;" onkeypress="return validDegree(event,'pol_lat_degree1')" /> <span class="symbol">&#176;</span>
                        </div>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="pol_lat_minute1" size="5" class="text ui-widget-content ui-corner-all pol_lat_minute1" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'pol_lat_minute1')"/> <span class="symbol">&#39;</span>
                        </div>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="pol_lat_second1" size="5" class="text ui-widget-content ui-corner-all pol_lat_second1" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'pol_lat_second1')"/> <span class="symbol">&#34;</span>
                        </div>
                        <select name="pol_lat_point1" class="selecting" style="width: 91px;">
                            <option value="U">U</option>
                            <option value="S">S</option>
                        </select>

                        <label for="lattitude">Longitude:</label>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="pol_lon_degree1" size="5" class="text ui-widget-content ui-corner-all pol_lon_degree1" style="float: left; margin-right: 3px;" onkeypress="return validDegree(event,'pol_lon_degree1')" /> <span class="symbol">&#176;</span>
                        </div>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="pol_lon_minute1" size="5" class="text ui-widget-content ui-corner-all pol_lon_minute1" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'pol_lon_minute1')"/> <span class="symbol">&#39;</span>
                        </div>
                        <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                            <input type="text" name="pol_lon_second1" size="5" class="text ui-widget-content ui-corner-all pol_lon_second1" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'pol_lon_second1')"/> <span class="symbol">&#34;</span>
                        </div>
                        <select name="pol_lon_point1" class="selecting" style="width: 91px;">
                            <option value="T">T</option>
                            <option value="B">B</option>
                        </select>
                        <div id="add_more_line"></div>
                        <p class="right">
                            <a href="javascript:add_more_line();" class="buttons" />+ Tambah Titik</a>
                        </p>
                    </div>
                    <input type="hidden" id="total_line_polygon" name="total_line_polygon" value="1" />

                </fieldset>
            </form>
        </div>

        <div id="dialog-lapsithar" title="Input Lapitshar">
            <form id="lapsithar_form" action="" method="post">
                <fieldset>
                    <input type="hidden" name="frontend_input" value="true"/>
                    <label for="judul">Judul :</label>
                    <input type="text" name="ar_title" class="text ui-widget-content ui-corner-all"/><br/>

                    <label for="lattitude">Lattitude:</label>
                    <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                        <input type="text" name="lat_degree_lapitshar" size="5" class="text ui-widget-content ui-corner-all lat_degree_lapitshar" style="float: left; margin-right: 3px;" onkeypress="return validDegree(event,'lat_degree_lapitshar')"/> <span class="symbol">&#176;</span>
                    </div>
                    <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                        <input type="text" name="lat_minute_lapitshar" size="5" class="text ui-widget-content ui-corner-all lat_minute_lapitshar" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'lat_minute_lapitshar')"/> <span class="symbol">&#39;</span>
                    </div>
                    <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                        <input type="text" name="lat_second_lapitshar" size="5" class="text ui-widget-content ui-corner-all lat_second_lapitshar" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'lat_second_lapitshar')"/> <span class="symbol">&#34;</span>
                    </div>
                    <select name="lat_point_lapitshar" class="selecting" style="width: 91px;">
                        <option value="U">U</option>
                        <option value="S">S</option>
                    </select>

                    <label for="lattitude">Longitude:</label>
                    <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                        <input type="text" name="lon_degree_lapitshar" size="5" class="text ui-widget-content ui-corner-all lon_degree_lapitshar" style="float: left; margin-right: 3px;" onkeypress="return validDegree(event,'lon_degree_lapitshar')"/> <span class="symbol">&#176;</span>
                    </div>
                    <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                        <input type="text" name="lon_minute_lapitshar" size="5" class="text ui-widget-content ui-corner-all lon_minute_lapitshar" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'lon_minute_lapitshar')"/> <span class="symbol">&#39;</span>
                    </div>
                    <div style="width: 104px; float: left; margin: 0 20px 0 0;">
                        <input type="text" name="lon_second_lapitshar" size="5" class="text ui-widget-content ui-corner-all lon_second_lapitshar" style="float: left; margin-right: 3px;" onkeypress="return validMinuteSecond(event,'lon_second_lapitshar')"/> <span class="symbol">&#34;</span>
                    </div>
                    <select name="lon_point_lapitshar" class="selecting" style="width: 91px;">
                        <option value="T">T</option>
                        <option value="B">B</option>
                    </select>

                    <label for="pelanggaran">Tipe Pelanggaran :</label>
                    <select name="vt_id" class="selecting">
                        <?php foreach ($violation_type as $row) { ?>
                            <option value="<?php echo $row->vt_id ?>"><?php echo $row->vt_desc ?></option>
                        <?php } ?>
                    </select>
                    <label for="laporan">Tipe Laporan :</label>
                    <select name="rt_id" class="selecting">
                        <?php foreach ($report_type as $row) { ?>
                            <option value="<?php echo $row->rt_id ?>"><?php echo $row->rt_desc ?></option>
                        <?php } ?>
                    </select>
                    <br/>

                    <label for="detail">Detail :</label>
                    <textarea name="ar_content" class="text ui-widget-content ui-corner-all" style="height: 100px;"></textarea>

                </fieldset>
            </form>
        </div>

        <div id="dialog-chat" title="Chat">
            <ul id="contact-list">
            </ul>
            <div id="chat-content">
                
            </div>
            <textarea id="chat-input"></textarea>
            <input type="submit" value="Send" id="chat-submit" />
        </div>

        <div id="dialog-marker-option" title="">
            <div id="result">

            </div>
        </div>
        <ul id="demo_menu2">
            <li>
                <div id="radiosetview">
                    <input type="checkbox" value="radio-kri" id="radio-kri" class="view" name="radio" checked="checked" onclick="viewMarker(this.id);"/><label for="radio-kri" style="width: 90px;">KRI</label><br />
                    <input type="checkbox" value="radio-track" id="radio-track" class="view" name="radio" onclick="viewMarker(this.id);" /><label for="radio-track" style="width: 90px;"  >TRACK</label><br />
                    <input type="checkbox" value="radio-base" id="radio-base" class="view" name="radio" onclick="viewMarker(this.id);" /><label for="radio-base" style="width: 90px;"  >PANGKALAN</label><br />
                    <input type="checkbox" value="radio-marinir" id="radio-marinir" class="view" name="radio" onclick="viewMarker(this.id);" /><label for="radio-marinir" style="width: 90px;"  >MARINIR</label><br />
                    <input type="checkbox" value="radio-intelejen" id="radio-intelejen" class="view" name="radio" onclick="viewMarker(this.id);" /><label for="radio-intelejen" style="width: 90px;"  >INFORMASI INTELEJEN</label><br />
                    <input type="checkbox" value="radio-imss" id="radio-imss" class="view" name="radio" onclick="viewMarker(this.id);" /><label for="radio-imss" style="width: 90px;"  >IMSS</label><br />
                    <!--<span style="color:navy;cursor:pointer;" onClick="$('#panelRight_1').panel('enable')">disable this panel</span>.</div>-->
                    <!--<input type="checkbox" value="radio-kriais" class="view" name="radio" /><label for="radio-kriais" style="width:75px;">KRI + TRACK</label>-->
                </div>
            </li>
        </ul>
    </body>
</html>
